// <auto-generated/>
#pragma warning disable 1591
namespace Microsoft.AspNetCore.Diagnostics.RazorViews
{
    #line hidden
    using System.Threading.Tasks;
#nullable restore
#line 1 "ErrorPage.cshtml"
using System;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "ErrorPage.cshtml"
using System.Globalization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "ErrorPage.cshtml"
using System.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "ErrorPage.cshtml"
using System.Net;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "ErrorPage.cshtml"
using System.Reflection;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "ErrorPage.cshtml"
using Microsoft.AspNetCore.Diagnostics.RazorViews;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "ErrorPage.cshtml"
using Microsoft.AspNetCore.Diagnostics;

#line default
#line hidden
#nullable disable
    internal class ErrorPage : Microsoft.Extensions.RazorViews.BaseView
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 17 "ErrorPage.cshtml"
  
    // TODO: Response.ReasonPhrase = "Internal Server Error";
    Response.ContentType = "text/html; charset=utf-8";
    string? location = string.Empty;

#line default
#line hidden
#nullable disable
            WriteLiteral("<!DOCTYPE html>\r\n<html");
            BeginWriteAttribute("lang", " lang=\"", 537, "\"", 598, 1);
#nullable restore
#line 23 "ErrorPage.cshtml"
WriteAttributeValue("", 544, CultureInfo.CurrentUICulture.TwoLetterISOLanguageName, 544, 54, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" xmlns=\"http://www.w3.org/1999/xhtml\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <title>");
#nullable restore
#line 26 "ErrorPage.cshtml"
          Write(Model.Title);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</title>
        <style>
            body {
    font-family: 'Segoe UI', Tahoma, Arial, Helvetica, sans-serif;
    font-size: .813em;
    color: #222;
    background-color: #fff;
}

h1 {
    color: #44525e;
    margin: 15px 0 15px 0;
}

h2 {
    margin: 10px 5px 0 0;
}

h3 {
    color: #363636;
    margin: 5px 5px 0 0;
    font-weight: normal;
}

code {
    font-family: Consolas, ""Courier New"", courier, monospace;
    font-weight: bold;
}

body .titleerror {
    padding: 3px 3px 6px 3px;
    display: block;
    font-size: 1.5em;
    font-weight: 100;
}

body .location {
    margin: 3px 0 10px 30px;
}

#header {
    font-size: 18px;
    padding: 15px 0;
    border-top: 1px #ddd solid;
    border-bottom: 1px #ddd solid;
    margin-bottom: 0;
}

    #header li {
        display: inline;
        margin: 5px;
        padding: 5px;
        color: #a0a0a0;
        cursor: pointer;
    }

    #header .selected {
        background: #44c5f2;
        color: #fff");
            WriteLiteral(@";
    }

#stackpage ul {
    list-style: none;
    padding-left: 0;
    margin: 0;
    /*border-bottom: 1px #ddd solid;*/
}

#stackpage .details {
    font-size: 1.2em;
    padding: 3px;
    color: #000;
}

#stackpage .stackerror {
    padding: 5px;
    border-bottom: 1px #ddd solid;
}


#stackpage .frame {
    padding: 0;
    margin: 0 0 0 30px;
}

    #stackpage .frame h3 {
        padding: 2px;
        margin: 0;
    }

#stackpage .source {
    padding: 0 0 0 30px;
}

    #stackpage .source ol li {
        font-family: Consolas, ""Courier New"", courier, monospace;
        white-space: pre;
        background-color: #fbfbfb;
    }

#stackpage .frame .source .highlight {
    border-left: 3px solid red;
    margin-left: -3px;
    font-weight: bold;
}

#stackpage .frame .source .highlight li span {
    color: #FF0000;
}

#stackpage .source ol.collapsible li {
    color: #888;
}

    #stackpage .source ol.collapsible li span {
        color: #606060;
    ");
            WriteLiteral(@"}

#routingpage .subheader {
    padding: 5px;
    border-bottom: 1px #ddd solid;
}

.page table {
    border-collapse: separate;
    border-spacing: 0;
    margin: 0 0 20px;
}

.page th {
    vertical-align: bottom;
    padding: 10px 5px 5px 5px;
    font-weight: 400;
    color: #a0a0a0;
    text-align: left;
}

.page td {
    padding: 3px 10px;
}

.page th, .page td {
    border-right: 1px #ddd solid;
    border-bottom: 1px #ddd solid;
    border-left: 1px transparent solid;
    border-top: 1px transparent solid;
    box-sizing: border-box;
}

    .page th:last-child, .page td:last-child {
        border-right: 1px transparent solid;
    }

.page .length {
    text-align: right;
}

a {
    color: #1ba1e2;
    text-decoration: none;
}

    a:hover {
        color: #13709e;
        text-decoration: underline;
    }

.showRawException {
    cursor: pointer;
    color: #44c5f2;
    background-color: transparent;
    font-size: 1.2em;
    text-align: left;
");
            WriteLiteral(@"
    text-decoration: none;
    display: inline-block;
    border: 0;
    padding: 0;
}

.rawExceptionStackTrace {
    font-size: 1.2em;
}

.rawExceptionBlock {
    border-top: 1px #ddd solid;
    border-bottom: 1px #ddd solid;
}

.showRawExceptionContainer {
    margin-top: 10px;
    margin-bottom: 10px;
}

.expandCollapseButton {
    cursor: pointer;
    float: left;
    height: 16px;
    width: 16px;
    font-size: 10px;
    position: absolute;
    left: 10px;
    background-color: #eee;
    padding: 0;
    border: 0;
    margin: 0;
}

/* Intentional double at-signs here to escape properly when included in cshtml */
");
            WriteLiteral(@"@media (prefers-color-scheme: dark) {
    body {
        color: #dcdcdc;
        background-color: #222;
    }

    h1 {
        color: #9dacb8;
    }

    h3 {
        color: #c7c7c7;
    }

    #header {
        border-top-color: #444;
        border-bottom-color: #444;
    }

    #header .selected {
        color: #222;
    }

    #stackpage .details {
        color: #000;
    }

    #stackpage .stackerror {
        border-bottom-color: #444;
    }

    #stackpage .source ol li {
        background-color: #1c1c1c;
    }

    #stackpage .frame .source .highlight {
        border-left-color: #C53731;
    }

    #stackpage .frame .source .highlight li span {
        color: #C53731;
    }

    #stackpage .source ol.collapsible li span {
        color: #9B9B9B;
    }

    #routingpage .subheader {
        border-bottom-color: #444;
    }

    .page th, .page td {
        border-right-color: #444;
        border-bottom-color: #444;
    }

    .rawExceptionB");
            WriteLiteral("lock {\r\n        border-top-color: #444;\r\n        border-bottom-color: #444;\r\n    }\r\n\r\n    .expandCollapseButton {\r\n        background-color: #444;\r\n        color: inherit;\r\n    }\r\n}\r\n\r\n        </style>\r\n    </head>\r\n    <body>\r\n        <h1>");
#nullable restore
#line 304 "ErrorPage.cshtml"
       Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_UnhandledException);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h1>\r\n");
#nullable restore
#line 305 "ErrorPage.cshtml"
         foreach (var errorDetail in Model.ErrorDetails)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <div class=\"titleerror\">");
#nullable restore
#line 307 "ErrorPage.cshtml"
                               Write(errorDetail.Error!.GetType().Name);

#line default
#line hidden
#nullable disable
            WriteLiteral(": ");
#nullable restore
#line 307 "ErrorPage.cshtml"
                                                                           Output.Write(HtmlEncodeAndReplaceLineBreaks(errorDetail.Error.Message)); 

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n");
#nullable restore
#line 308 "ErrorPage.cshtml"

            var firstFrame = errorDetail.StackFrames.FirstOrDefault();
            if (firstFrame != null)
            {
                location = firstFrame.Function;
            }
            if (!string.IsNullOrEmpty(location) && firstFrame != null && !string.IsNullOrEmpty(firstFrame.File))
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <p class=\"location\">");
#nullable restore
#line 316 "ErrorPage.cshtml"
                               Write(location);

#line default
#line hidden
#nullable disable
            WriteLiteral(" in <code");
            BeginWriteAttribute("title", " title=\"", 6360, "\"", 6384, 1);
#nullable restore
#line 316 "ErrorPage.cshtml"
WriteAttributeValue("", 6368, firstFrame.File, 6368, 16, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 316 "ErrorPage.cshtml"
                                                                           Write(System.IO.Path.GetFileName(firstFrame.File));

#line default
#line hidden
#nullable disable
            WriteLiteral("</code>, line ");
#nullable restore
#line 316 "ErrorPage.cshtml"
                                                                                                                                     Write(firstFrame.Line);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n");
#nullable restore
#line 317 "ErrorPage.cshtml"
            }
            else if (!string.IsNullOrEmpty(location))
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <p class=\"location\">");
#nullable restore
#line 320 "ErrorPage.cshtml"
                               Write(location);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n");
#nullable restore
#line 321 "ErrorPage.cshtml"
            }
            else
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <p class=\"location\">");
#nullable restore
#line 324 "ErrorPage.cshtml"
                               Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_UnknownLocation);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n");
#nullable restore
#line 325 "ErrorPage.cshtml"
            }

            var reflectionTypeLoadException = errorDetail.Error as ReflectionTypeLoadException;
            if (reflectionTypeLoadException != null)
            {
                if (reflectionTypeLoadException.LoaderExceptions.Length > 0)
                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                    <h3>Loader Exceptions:</h3>\r\n                    <ul>\r\n");
#nullable restore
#line 334 "ErrorPage.cshtml"
                         foreach (var ex in reflectionTypeLoadException.LoaderExceptions)
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <li>");
#nullable restore
#line 336 "ErrorPage.cshtml"
                           Write(ex!.Message);

#line default
#line hidden
#nullable disable
            WriteLiteral("</li>\r\n");
#nullable restore
#line 337 "ErrorPage.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    </ul>\r\n");
#nullable restore
#line 339 "ErrorPage.cshtml"
                }
            }
        }

#line default
#line hidden
#nullable disable
            WriteLiteral("        <ul id=\"header\">\r\n            <li id=\"stack\" tabindex=\"1\" class=\"selected\">\r\n                ");
#nullable restore
#line 344 "ErrorPage.cshtml"
           Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_StackButton);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n            </li>\r\n            <li id=\"query\" tabindex=\"2\">\r\n                ");
#nullable restore
#line 347 "ErrorPage.cshtml"
           Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_QueryButton);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n            </li>\r\n            <li id=\"cookies\" tabindex=\"3\">\r\n                ");
#nullable restore
#line 350 "ErrorPage.cshtml"
           Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_CookiesButton);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n            </li>\r\n            <li id=\"headers\" tabindex=\"4\">\r\n                ");
#nullable restore
#line 353 "ErrorPage.cshtml"
           Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_HeadersButton);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n            </li>\r\n            <li id=\"routing\" tabindex=\"5\">\r\n                ");
#nullable restore
#line 356 "ErrorPage.cshtml"
           Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_RoutingButton);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n            </li>\r\n        </ul>\r\n\r\n        <div id=\"stackpage\" class=\"page\">\r\n            <ul>\r\n");
#nullable restore
#line 362 "ErrorPage.cshtml"
                  
                    var exceptionCount = 0;
                    var stackFrameCount = 0;
                    var exceptionDetailId = "";
                    var frameId = "";
                

#line default
#line hidden
#nullable disable
#nullable restore
#line 368 "ErrorPage.cshtml"
                 foreach (var errorDetail in Model.ErrorDetails)
                {
                    exceptionCount++;
                    exceptionDetailId = "exceptionDetail" + exceptionCount;


#line default
#line hidden
#nullable disable
            WriteLiteral("                    <li>\r\n                        <h2 class=\"stackerror\">");
#nullable restore
#line 374 "ErrorPage.cshtml"
                                          Write(errorDetail.Error!.GetType().Name);

#line default
#line hidden
#nullable disable
            WriteLiteral(": ");
#nullable restore
#line 374 "ErrorPage.cshtml"
                                                                              Write(errorDetail.Error.Message);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h2>\r\n                        <ul>\r\n");
#nullable restore
#line 376 "ErrorPage.cshtml"
                             foreach (var frame in errorDetail.StackFrames)
                            {
                                stackFrameCount++;
                                frameId = "frame" + stackFrameCount;


#line default
#line hidden
#nullable disable
            WriteLiteral("                                <li class=\"frame\"");
            BeginWriteAttribute("id", " id=\"", 8937, "\"", 8950, 1);
#nullable restore
#line 381 "ErrorPage.cshtml"
WriteAttributeValue("", 8942, frameId, 8942, 8, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">\r\n");
#nullable restore
#line 382 "ErrorPage.cshtml"
                                     if (string.IsNullOrEmpty(frame.File))
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <h3>");
#nullable restore
#line 384 "ErrorPage.cshtml"
                                       Write(frame.Function);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h3>\r\n");
#nullable restore
#line 385 "ErrorPage.cshtml"
                                    }
                                    else
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <h3>");
#nullable restore
#line 388 "ErrorPage.cshtml"
                                       Write(frame.Function);

#line default
#line hidden
#nullable disable
            WriteLiteral(" in <code");
            BeginWriteAttribute("title", " title=\"", 9323, "\"", 9342, 1);
#nullable restore
#line 388 "ErrorPage.cshtml"
WriteAttributeValue("", 9331, frame.File, 9331, 11, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 388 "ErrorPage.cshtml"
                                                                                    Write(System.IO.Path.GetFileName(frame.File));

#line default
#line hidden
#nullable disable
            WriteLiteral("</code></h3>\r\n");
#nullable restore
#line 389 "ErrorPage.cshtml"
                                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 391 "ErrorPage.cshtml"
                                     if (frame.Line != 0 && frame.ContextCode.Any())
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <button class=\"expandCollapseButton\" data-frameId=\"");
#nullable restore
#line 393 "ErrorPage.cshtml"
                                                                                      Write(frameId);

#line default
#line hidden
#nullable disable
            WriteLiteral("\">+</button>\r\n                                        <div class=\"source\">\r\n");
#nullable restore
#line 395 "ErrorPage.cshtml"
                                             if (frame.PreContextCode.Any())
                                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                <ol");
            BeginWriteAttribute("start", " start=\"", 9914, "\"", 9943, 1);
#nullable restore
#line 397 "ErrorPage.cshtml"
WriteAttributeValue("", 9922, frame.PreContextLine, 9922, 21, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" class=\"collapsible\">\r\n");
#nullable restore
#line 398 "ErrorPage.cshtml"
                                                     foreach (var line in frame.PreContextCode)
                                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                        <li><span>");
#nullable restore
#line 400 "ErrorPage.cshtml"
                                                             Write(line);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span></li>\r\n");
#nullable restore
#line 401 "ErrorPage.cshtml"
                                                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                </ol>\r\n");
#nullable restore
#line 403 "ErrorPage.cshtml"
                                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                            <ol");
            BeginWriteAttribute("start", " start=\"", 10410, "\"", 10429, 1);
#nullable restore
#line 405 "ErrorPage.cshtml"
WriteAttributeValue("", 10418, frame.Line, 10418, 11, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" class=\"highlight\">\r\n");
#nullable restore
#line 406 "ErrorPage.cshtml"
                                                 foreach (var line in frame.ContextCode)
                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                    <li><span>");
#nullable restore
#line 408 "ErrorPage.cshtml"
                                                         Write(line);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span></li>\r\n");
#nullable restore
#line 409 "ErrorPage.cshtml"
                                                }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            </ol>\r\n\r\n");
#nullable restore
#line 412 "ErrorPage.cshtml"
                                             if (frame.PostContextCode.Any())
                                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                <ol");
            BeginWriteAttribute("start", " start=\'", 10954, "\'", 10979, 1);
#nullable restore
#line 414 "ErrorPage.cshtml"
WriteAttributeValue("", 10962, frame.Line + 1, 10962, 17, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" class=\"collapsible\">\r\n");
#nullable restore
#line 415 "ErrorPage.cshtml"
                                                     foreach (var line in frame.PostContextCode)
                                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                        <li><span>");
#nullable restore
#line 417 "ErrorPage.cshtml"
                                                             Write(line);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span></li>\r\n");
#nullable restore
#line 418 "ErrorPage.cshtml"
                                                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                </ol>\r\n");
#nullable restore
#line 420 "ErrorPage.cshtml"
                                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        </div>\r\n");
#nullable restore
#line 422 "ErrorPage.cshtml"
                                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                </li>\r\n");
#nullable restore
#line 424 "ErrorPage.cshtml"
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                        </ul>
                    </li>
                    <li>
                        <br />
                        <div class=""rawExceptionBlock"">
                            <div class=""showRawExceptionContainer"">
                                <button class=""showRawException"" data-exceptionDetailId=""");
#nullable restore
#line 431 "ErrorPage.cshtml"
                                                                                    Write(exceptionDetailId);

#line default
#line hidden
#nullable disable
            WriteLiteral("\">Show raw exception details</button>\r\n                            </div>\r\n                            <div");
            BeginWriteAttribute("id", " id=\"", 12011, "\"", 12034, 1);
#nullable restore
#line 433 "ErrorPage.cshtml"
WriteAttributeValue("", 12016, exceptionDetailId, 12016, 18, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" class=\"rawExceptionDetails\">\r\n                                <pre class=\"rawExceptionStackTrace\">");
#nullable restore
#line 434 "ErrorPage.cshtml"
                                                               Write(errorDetail.Error.ToString());

#line default
#line hidden
#nullable disable
            WriteLiteral("</pre>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n");
#nullable restore
#line 438 "ErrorPage.cshtml"
                }

#line default
#line hidden
#nullable disable
            WriteLiteral("            </ul>\r\n        </div>\r\n\r\n        <div id=\"querypage\" class=\"page\">\r\n");
#nullable restore
#line 443 "ErrorPage.cshtml"
             if (Model.Query.Any())
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>");
#nullable restore
#line 448 "ErrorPage.cshtml"
                           Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_VariableColumn);

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n                            <th>");
#nullable restore
#line 449 "ErrorPage.cshtml"
                           Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_ValueColumn);

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n");
#nullable restore
#line 453 "ErrorPage.cshtml"
                         foreach (var kv in Model.Query.OrderBy(kv => kv.Key))
                        {
                            foreach (var v in kv.Value)
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <tr>\r\n                                    <td>");
#nullable restore
#line 458 "ErrorPage.cshtml"
                                   Write(kv.Key);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td>");
#nullable restore
#line 459 "ErrorPage.cshtml"
                                   Write(v);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                </tr>\r\n");
#nullable restore
#line 461 "ErrorPage.cshtml"
                            }
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    </tbody>\r\n                </table>\r\n");
#nullable restore
#line 465 "ErrorPage.cshtml"
            }
            else
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <p>");
#nullable restore
#line 468 "ErrorPage.cshtml"
              Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_NoQueryStringData);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n");
#nullable restore
#line 469 "ErrorPage.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("        </div>\r\n\r\n        <div id=\"cookiespage\" class=\"page\">\r\n");
#nullable restore
#line 473 "ErrorPage.cshtml"
             if (Model.Cookies.Any())
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>");
#nullable restore
#line 478 "ErrorPage.cshtml"
                           Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_VariableColumn);

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n                            <th>");
#nullable restore
#line 479 "ErrorPage.cshtml"
                           Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_ValueColumn);

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n");
#nullable restore
#line 483 "ErrorPage.cshtml"
                         foreach (var kv in Model.Cookies.OrderBy(kv => kv.Key))
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <tr>\r\n                                <td>");
#nullable restore
#line 486 "ErrorPage.cshtml"
                               Write(kv.Key);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 487 "ErrorPage.cshtml"
                               Write(kv.Value);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                            </tr>\r\n");
#nullable restore
#line 489 "ErrorPage.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    </tbody>\r\n                </table>\r\n");
#nullable restore
#line 492 "ErrorPage.cshtml"
            }
            else
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <p>");
#nullable restore
#line 495 "ErrorPage.cshtml"
              Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_NoCookieData);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n");
#nullable restore
#line 496 "ErrorPage.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("        </div>\r\n\r\n        <div id=\"headerspage\" class=\"page\">\r\n");
#nullable restore
#line 500 "ErrorPage.cshtml"
             if (Model.Headers.Any())
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>");
#nullable restore
#line 505 "ErrorPage.cshtml"
                           Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_VariableColumn);

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n                            <th>");
#nullable restore
#line 506 "ErrorPage.cshtml"
                           Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_ValueColumn);

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n");
#nullable restore
#line 510 "ErrorPage.cshtml"
                         foreach (var kv in Model.Headers.OrderBy(kv => kv.Key))
                        {
                            foreach (var v in kv.Value)
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <tr>\r\n                                    <td>");
#nullable restore
#line 515 "ErrorPage.cshtml"
                                   Write(kv.Key);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td>");
#nullable restore
#line 516 "ErrorPage.cshtml"
                                   Write(v);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                </tr>\r\n");
#nullable restore
#line 518 "ErrorPage.cshtml"
                            }
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    </tbody>\r\n                </table>\r\n");
#nullable restore
#line 522 "ErrorPage.cshtml"
            }
            else
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <p>");
#nullable restore
#line 525 "ErrorPage.cshtml"
              Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_NoHeaderData);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n");
#nullable restore
#line 526 "ErrorPage.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("        </div>\r\n\r\n        <div id=\"routingpage\" class=\"page\">\r\n            <h2 class=\"subheader\">");
#nullable restore
#line 530 "ErrorPage.cshtml"
                             Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_Endpoint);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h2>\r\n");
#nullable restore
#line 531 "ErrorPage.cshtml"
             if (Model.Endpoint != null)
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>");
#nullable restore
#line 536 "ErrorPage.cshtml"
                           Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_NameColumn);

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n                            <th>");
#nullable restore
#line 537 "ErrorPage.cshtml"
                           Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_ValueColumn);

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>");
#nullable restore
#line 542 "ErrorPage.cshtml"
                           Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_EndpointDisplayName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                            <td>");
#nullable restore
#line 543 "ErrorPage.cshtml"
                           Write(Model.Endpoint.DisplayName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        </tr>\r\n");
#nullable restore
#line 545 "ErrorPage.cshtml"
                         if (!string.IsNullOrEmpty(Model.Endpoint.RoutePattern))
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <tr>\r\n                                <td>");
#nullable restore
#line 548 "ErrorPage.cshtml"
                               Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_EndpointRoutePattern);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 549 "ErrorPage.cshtml"
                               Write(Model.Endpoint.RoutePattern);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                            </tr>\r\n");
#nullable restore
#line 551 "ErrorPage.cshtml"
                        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 552 "ErrorPage.cshtml"
                         if (Model.Endpoint.Order != null)
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <tr>\r\n                                <td>");
#nullable restore
#line 555 "ErrorPage.cshtml"
                               Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_EndpointRouteOrder);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 556 "ErrorPage.cshtml"
                               Write(Model.Endpoint.Order);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                            </tr>\r\n");
#nullable restore
#line 558 "ErrorPage.cshtml"
                        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 559 "ErrorPage.cshtml"
                         if (!string.IsNullOrEmpty(Model.Endpoint.HttpMethods))
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <tr>\r\n                                <td>");
#nullable restore
#line 562 "ErrorPage.cshtml"
                               Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_EndpointRouteHttpMethod);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 563 "ErrorPage.cshtml"
                               Write(Model.Endpoint.HttpMethods);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                            </tr>\r\n");
#nullable restore
#line 565 "ErrorPage.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    </tbody>\r\n                </table>\r\n");
#nullable restore
#line 568 "ErrorPage.cshtml"
            }
            else
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <p>");
#nullable restore
#line 571 "ErrorPage.cshtml"
              Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_NoEndpoint);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n");
#nullable restore
#line 572 "ErrorPage.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("            <h2 class=\"subheader\">");
#nullable restore
#line 573 "ErrorPage.cshtml"
                             Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_RouteValues);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h2>\r\n");
#nullable restore
#line 574 "ErrorPage.cshtml"
             if (Model.RouteValues != null && Model.RouteValues.Any())
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>");
#nullable restore
#line 579 "ErrorPage.cshtml"
                           Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_VariableColumn);

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n                            <th>");
#nullable restore
#line 580 "ErrorPage.cshtml"
                           Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_ValueColumn);

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n");
#nullable restore
#line 584 "ErrorPage.cshtml"
                         foreach (var kv in Model.RouteValues.OrderBy(kv => kv.Key))
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <tr>\r\n                                <td>");
#nullable restore
#line 587 "ErrorPage.cshtml"
                               Write(kv.Key);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 588 "ErrorPage.cshtml"
                                Write(kv.Value!);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                            </tr>\r\n");
#nullable restore
#line 590 "ErrorPage.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    </tbody>\r\n                </table>\r\n");
#nullable restore
#line 593 "ErrorPage.cshtml"
            }
            else
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <p>");
#nullable restore
#line 596 "ErrorPage.cshtml"
              Write(Jokersoft.AspNetCore.Diagnostics.Resources.ErrorPageHtml_NoRouteValues);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n");
#nullable restore
#line 597 "ErrorPage.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        </div>

        <script>
            //<!--
            (function (window, undefined) {
    ""use strict"";

    function ns(selector, element) {
        return new NodeCollection(selector, element);
    }

    function NodeCollection(selector, element) {
        this.items = [];
        element = element || window.document;

        var nodeList;

        if (typeof (selector) === ""string"") {
            nodeList = element.querySelectorAll(selector);
            for (var i = 0, l = nodeList.length; i < l; i++) {
                this.items.push(nodeList.item(i));
            }
        }
    }

    NodeCollection.prototype = {
        each: function (callback) {
            for (var i = 0, l = this.items.length; i < l; i++) {
                callback(this.items[i], i);
            }
            return this;
        },

        children: function (selector) {
            var children = [];

            this.each(function (el) {
                children = children.conca");
            WriteLiteral(@"t(ns(selector, el).items);
            });

            return ns(children);
        },

        hide: function () {
            this.each(function (el) {
                el.style.display = ""none"";
            });

            return this;
        },

        toggle: function () {
            this.each(function (el) {
                el.style.display = el.style.display === ""none"" ? """" : ""none"";
            });

            return this;
        },

        show: function () {
            this.each(function (el) {
                el.style.display = """";
            });

            return this;
        },

        addClass: function (className) {
            this.each(function (el) {
                var existingClassName = el.className,
                    classNames;
                if (!existingClassName) {
                    el.className = className;
                } else {
                    classNames = existingClassName.split("" "");
                    if (classNames");
            WriteLiteral(@".indexOf(className) < 0) {
                        el.className = existingClassName + "" "" + className;
                    }
                }
            });

            return this;
        },

        removeClass: function (className) {
            this.each(function (el) {
                var existingClassName = el.className,
                    classNames, index;
                if (existingClassName === className) {
                    el.className = """";
                } else if (existingClassName) {
                    classNames = existingClassName.split("" "");
                    index = classNames.indexOf(className);
                    if (index > 0) {
                        classNames.splice(index, 1);
                        el.className = classNames.join("" "");
                    }
                }
            });

            return this;
        },

        attr: function (name) {
            if (this.items.length === 0) {
                return null;
        ");
            WriteLiteral(@"    }

            return this.items[0].getAttribute(name);
        },

        on: function (eventName, handler) {
            this.each(function (el, idx) {
                var callback = function (e) {
                    e = e || window.event;
                    if (!e.which && e.keyCode) {
                        e.which = e.keyCode; // Normalize IE8 key events
                    }
                    handler.apply(el, [e]);
                };

                if (el.addEventListener) { // DOM Events
                    el.addEventListener(eventName, callback, false);
                } else if (el.attachEvent) { // IE8 events
                    el.attachEvent(""on"" + eventName, callback);
                } else {
                    el[""on"" + type] = callback;
                }
            });

            return this;
        },

        click: function (handler) {
            return this.on(""click"", handler);
        },

        keypress: function (handler) {
         ");
            WriteLiteral(@"   return this.on(""keypress"", handler);
        }
    };

    function frame(el) {
        ns("".source .collapsible"", el).toggle();
    }

    function expandCollapseButton(el) {
        var frameId = el.getAttribute(""data-frameId"");
        frame(document.getElementById(frameId));
        if (el.innerText === ""+"") {
            el.innerText = ""-"";
        }
        else {
            el.innerText = ""+"";
        }
    }

    function tab(el) {
        var unselected = ns(""#header .selected"").removeClass(""selected"").attr(""id"");
        var selected = ns(""#"" + el.id).addClass(""selected"").attr(""id"");

        ns(""#"" + unselected + ""page"").hide();
        ns(""#"" + selected + ""page"").show();
    }

    ns("".rawExceptionDetails"").hide();
    ns("".collapsible"").hide();
    ns("".page"").hide();
    ns(""#stackpage"").show();

    ns("".expandCollapseButton"")
        .click(function () {
            expandCollapseButton(this);
        })
        .keypress(function (e) {
            if ");
            WriteLiteral(@"(e.which === 13) {
                expandCollapseButton(this);
            }
        });

    ns(""#header li"")
        .click(function () {
            tab(this);
        })
        .keypress(function (e) {
            if (e.which === 13) {
                tab(this);
            }
        });

    ns("".showRawException"")
        .click(function () {
            var exceptionDetailId = this.getAttribute(""data-exceptionDetailId"");
            ns(""#"" + exceptionDetailId).toggle();
        });
})(window);
            //-->
        </script>
    </body>
</html>
");
        }
        #pragma warning restore 1998
#nullable restore
#line 9 "ErrorPage.cshtml"
 
    public ErrorPage(ErrorPageModel model)
    {
        Model = model;
    }

    public ErrorPageModel Model { get; set; }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
